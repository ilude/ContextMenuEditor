<Application x:Class="ContextMenuEditor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:util="clr-namespace:ContextMenuEditor.Utilities"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!-- Converters -->
            <util:ThemeLabelConverter x:Key="ThemeLabelConverter"/>
            
            <!-- Global styles and resources -->
            <Style TargetType="Window">
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
            </Style>
            
            <Style TargetType="Button">
                <Setter Property="Padding" Value="12,6"/>
                <Setter Property="Margin" Value="0,0,0,8"/>
                <Setter Property="MinWidth" Value="100"/>
                <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"
                                                TextBlock.Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonHoverBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonPressedBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style TargetType="DataGrid">
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="SelectionMode" Value="Extended"/>
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="GridLinesVisibility" Value="Horizontal"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
                <Setter Property="RowBackground" Value="{DynamicResource ControlBackgroundBrush}"/>
                <Setter Property="AlternatingRowBackground" Value="{DynamicResource AlternateRowBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource GridLineBrush}"/>
            </Style>
            
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="{DynamicResource HeaderBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="0,0,1,1"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
            </Style>
            
            <Style TargetType="DataGridRow">
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
                <Style.Triggers>
                    <!-- Disabled items appear grayed out -->
                    <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                        <Setter Property="Foreground" Value="#808080"/>
                        <Setter Property="FontStyle" Value="Italic"/>
                    </DataTrigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource SelectionBackgroundBrush}"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ButtonHoverBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Padding" Value="4,2"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style TargetType="CheckBox">
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
            </Style>
            
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            </Style>
            
            <Style TargetType="GridSplitter">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
            </Style>
            
            <Style TargetType="StackPanel">
                <Setter Property="Background" Value="Transparent"/>
            </Style>
            
            <Style TargetType="Separator">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
            </Style>
            
            <Style TargetType="StatusBar">
                <Setter Property="Background" Value="{DynamicResource HeaderBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
            </Style>
            
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
